---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: debugjob
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: debugjob
rules:
  # The role's capabilities can be enhanced in future (ex: crd) 
- apiGroups: ["*"]
  resources: ["nodes","nodes/proxy"]
  verbs: ["get","list"]
- apiGroups: ["*"]
  resources: ["namespaces","services","pods","pods/exec","deployments","daemonsets","statefulsets"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["persistentvolumes","persistentvolumeclaims"]
  verbs: ["*"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: debugjob
  namespace: default
subjects:
- kind: ServiceAccount
  name: debugjob
  namespace: default
roleRef:
  kind: ClusterRole
  name: debugjob
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: debugjob
spec:
  template:
    metadata:
      name: debugjob
    spec:
      restartPolicy: Never
      serviceAccountName: debugjob 
      containers:
      - name: debugjob
        image: openebs/logger 
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        ## Specify duration in minutes
        ## Provide a comma separated list of the pod literals
        args: ["-c", "./logger.sh -d 5 -r maya,openebs,pvc; exit 0"]
        volumeMounts:
        - name: kubeconfig 
          mountPath: /root/admin.conf
          subPath: admin.conf
        - name: logs
          mountPath: /mnt 
        tty: true 
      volumes: 
        - name: kubeconfig
          ## kubectl create configmap kubeconfig --from-file=<kubeconfig-file>
          configMap: 
            name: kubeconfig 
        - name: logs 
          ## Logs collected in /mnt/Logstash_<time_stamp>.tar 
          hostPath:
            path: /mnt
            type: Directory 


